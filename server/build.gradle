buildscript {
    ext.kotlin_version = '1.5.10' // Required for Kotlin integration
    ext.spring_boot_version = '2.5.2'
    ext.log4j2_version = '2.14.0'
    ext.hibernate_version = '5.5.3.Final'
    ext.jackson_version = '2.12.3'
    ext.kotest_version = '4.6.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        // See https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.hibernate:hibernate-gradle-plugin:$hibernate_version"
    }
}

plugins {
    id 'base'
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'com.google.cloud.tools.jib' version '2.7.1'
    id "com.gorylenko.gradle-git-properties" version "2.2.2"
    id 'io.kotest' version '0.3.8'
}

apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: "kotlin-spring" // https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.hibernate.orm'
apply plugin: 'kotlin-noarg'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

repositories {
    maven {
        url = 'https://nexus.informationgrid.eu/repository/maven-public'
    }
}

// Profile support
if (!hasProperty('buildProfile') || getProperty('buildProfile') == 'cypress') apply from: "profile-dev.gradle"

// for faster development ignore frontend project and its long build time
if (hasProperty('buildProfile')) {
    dependencies {
        runtimeOnly project(':frontend')
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // Required for Kotlin integration
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.apache.logging.log4j:log4j-api-kotlin:1.0.0"

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "io.pebbletemplates:pebble-spring-boot-starter:3.1.5"
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.security:spring-security-acl'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // spring properties metadata
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    kapt("org.springframework.boot:spring-boot-configuration-processor")

    // Jackson
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jackson_version"
//    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"

    // Keycloak
    implementation 'org.keycloak:keycloak-spring-boot-starter:12.0.4'
    implementation 'org.keycloak:keycloak-admin-client:12.0.4'

    // Markdown
    implementation "com.atlassian.commonmark:commonmark:0.16.1"
    implementation "com.atlassian.commonmark:commonmark-ext-yaml-front-matter:0.16.1"
    implementation "com.atlassian.commonmark:commonmark-ext-gfm-tables:0.16.1"

    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'com.auth0:java-jwt:3.10.0'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.2' // Attention: also update SwaggerDocumentationConfig.kt

    // PostgreSQL
    implementation 'org.postgresql:postgresql:42.2.20'
    implementation "org.hibernate:hibernate-core:$hibernate_version"
    implementation 'com.vladmihalcea:hibernate-types-52:2.11.0'

    implementation 'com.github.fge:json-schema-validator:2.2.6'
    implementation('de.ingrid:ingrid-codelist-service:5.10.0') {
        exclude group: 'log4j', module: 'log4j'
    }
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation "org.apache.logging.log4j:log4j-api:$log4j2_version"
    implementation "org.apache.logging.log4j:log4j-core:$log4j2_version"
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-text:1.9'

    // Test
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version" // for kotest framework
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotest_version" // for kotest core jvm assertions
    testImplementation "io.kotest:kotest-runner-console-jvm:4.1.3.2" // to run from IntelliJ
    testImplementation "io.kotest:kotest-extensions-spring:4.4.3" // to wire dependencies using Spring
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // iBus communication
    implementation('de.ingrid:ingrid-elasticsearch-tools:5.6.0')

    implementation('de.ingrid:ingrid-ibus-client:5.7.0') {
        exclude group: 'org.apache.logging.log4j'
    }
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-bus'
        exclude group: 'com.sun.mail', module: 'javax.mail'
        exclude group: 'javax.mail', module: 'mailapi'
        resolutionStrategy {
            force "org.apache.logging.log4j:log4j-api:$log4j2_version"
            force "org.apache.logging.log4j:log4j-core:$log4j2_version"
        }
    }
}

group = 'de.ingrid'
description = 'IGE-NG Server'
sourceCompatibility = '11.0'

springBoot {
    buildInfo()
}

allOpen {
    annotation("javax.persistence.Entity")
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

test {
    ignoreFailures = true
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

// create docker image
jib {
    // tag for image on develop branch will be latest
    // tag for image on master branch will be the version
    // tag for image on any feature branch will have the branch name
    def tag = project.ext.branch_name == "develop" ? "latest" : project.ext.branch_name
    if (project.ext.branch_name == "master") {
        tag = version
    }
    tag = tag.replaceAll("/", "-")
    from {
        image = 'openjdk:11-jre-slim'
    }
    to {
        image = 'docker-registry.wemove.com/ingrid-ige-ng:' + tag
        // tags = ['jib'] // additional tags
    }
    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
        jvmFlags = ['-Xmx512m', '-Dstorage.diskCache.bufferSize=256']
    }
}

noArg {
    annotation('de.ingrid.igeserver.annotations.NoArgs')
}

hibernate {
    enhance {
        enableLazyInitialization= true
        enableDirtyTracking = true
        enableAssociationManagement = true
        enableExtendedEnhancement = false
    }
}

if (hasProperty('buildProfile')) {
    //tasks.assemble.dependsOn tasks.jibDockerBuild
    tasks.assemble.dependsOn tasks.jib
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
