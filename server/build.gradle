buildscript {
    ext.kotlin_version = '1.3.70' // Required for Kotlin integration
    ext.spring_boot_version = '2.2.5.RELEASE'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        // See https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

plugins {
    id 'base'
    id 'java'
    id 'idea'
//    id 'org.springframework.boot'
//    id 'io.spring.dependency-management'
    id 'maven-publish'
    id 'com.google.cloud.tools.jib' version '2.1.0'
}

apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: "kotlin-spring" // https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    maven {
        url = 'https://nexus.informationgrid.eu/repository/maven-public'
    }
}

// Profile support
if (!hasProperty('buildProfile')) apply from: "profile-dev.gradle"

dependencies {
    implementation project(':api')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // Required for Kotlin integration
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.apache.logging.log4j:log4j-api-kotlin:1.0.0"
    runtimeOnly project(':frontend')

    // Spring
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation "io.pebbletemplates:pebble-spring-boot-starter:3.1.2"
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation('org.springframework.boot:spring-boot-starter-security') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    // Keycloak
    implementation('org.keycloak:keycloak-spring-boot-starter:9.0.0') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    // Markdown
    implementation "com.atlassian.commonmark:commonmark:0.12.1"
    implementation "com.atlassian.commonmark:commonmark-ext-yaml-front-matter:0.12.1"
    implementation "com.atlassian.commonmark:commonmark-ext-gfm-tables:0.12.1"

    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'com.auth0:java-jwt:3.10.0'
    implementation 'org.springdoc:springdoc-openapi-ui:1.2.32'
    implementation 'com.orientechnologies:orientdb-core:3.0.28'
    implementation 'com.orientechnologies:orientdb-server:3.0.28'
    implementation 'com.github.fge:json-schema-validator:2.2.6'
    implementation('de.ingrid:ingrid-codelist-service:5.2.0') {
        exclude group: 'log4j', module: 'log4j'
    }
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.10.2'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.apache.logging.log4j:log4j-1.2-api'
    implementation 'org.apache.commons:commons-lang3:3.9'

    // Test
    testImplementation 'junit:junit'
    testImplementation 'org.mockito:mockito-core'
}

group = 'de.ingrid'
description = 'IGE-NG Server'
sourceCompatibility = '11.0'

test {
    ignoreFailures = true
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}


// create docker image
jib {
    from {
        image = 'openjdk:11-jre-slim-buster'
    }
    to {
        image = 'docker-registry.wemove.com/ingrid-ige-ng'
        // tags = ['jib'] // additional tags
    }
    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
        jvmFlags = ['-Xmx512m', '-Dstorage.diskCache.bufferSize=256']
    }
}

//tasks.assemble.dependsOn tasks.jibDockerBuild
tasks.assemble.dependsOn tasks.jib

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
