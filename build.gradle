import org.jetbrains.changelog.ExtensionsKt

plugins {
    id "fr.brouillard.oss.gradle.jgitver" version "0.9.1"
    id "org.jetbrains.changelog" version "1.1.2"
    id "com.diffplug.spotless" version "6.23.3" apply false
    id 'org.cyclonedx.bom' version '1.10.0'
}

group = 'de.ingrid'

changelog {
    version = "1.0.0"
    header = { "[${-> project.version}] - ${ExtensionsKt.date('yyyy-MM-dd')}" }
}

subprojects {
    version = 'MANAGED_BY_JGITVER'
    apply plugin: "com.diffplug.spotless"
}

jgitver {
    policy {
        pattern = '([main|develop|support].*)'
        transformations = ['IGNORE']
    }
    policy {
        pattern = '(\\d+\\.\\d+\\.\\d+)'
        transformations = ['IGNORE']
    }
    autoIncrementPatch = false
}

allprojects {
    configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (project.version.contains("-")) return
            if (details.requested.version.endsWith("-SNAPSHOT")) {
                throw new GradleException("found snapshot dependency")
            }
        }
    }
}

cyclonedxBom {
    // includeConfigs is the list of configuration names to include when generating the BOM (leave empty to include every configuration), regex is supported
    includeConfigs = ["runtimeClasspath"]
    // skipConfigs is a list of configuration names to exclude when generating the BOM, regex is supported
    skipConfigs = ["compileClasspath", "testCompileClasspath"]
    // Specified the type of project being built. Defaults to 'library'
    projectType = "application"
    // Specified the version of the CycloneDX specification to use. Defaults to '1.5'
    schemaVersion = "1.5"
    // Boms destination directory. Defaults to 'build/reports'
    destination = file("build/reports")
    // The file name for the generated BOMs (before the file format suffix). Defaults to 'bom'
    outputName = "bom"
    // The file format generated, can be xml, json or all for generating both. Defaults to 'all'
    outputFormat = "json"
    componentVersion = rootProject.version
}
