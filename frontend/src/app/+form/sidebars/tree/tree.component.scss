@import "../../../../variables";

:host {
  display: flex;
  flex-direction: column;
  flex: 1;
}

::ng-deep .mat-tree {
  background-color: #ffffff;
  overflow: auto;
}

mat-tree-node {
  cursor: pointer;
  min-height: 20px;

  ::ng-deep svg path {
    fill: #000000;
  }

  &.folder {
    border-color: transparent;

    &.expanded {

      .toggle {
        color: #000000de;
      }

      .expander {
        transform: rotate(90deg);
      }
    }

    &.expanded.rootNode {
       border-bottom: 1px solid $ige-background-bar;
    }

    > div {
      display: flex;
      flex-direction: row-reverse;
      justify-content: space-between;
      align-items: center;
    }
  }

  &.rootNode {
    padding: 9px 0;
    background-color: $ige-background;

    &:hover {
      background-color: darken($ige-background, 5%);
    }

    &.selected {
      background-color: darken($ige-background, 5%);
    }

    &.selected:hover {
      background-color: darken($ige-background, 10%);
    }

    &.folder {
      font-size: 16px;
    }
  }

  &.rootNode.folder,
  &.rootNode.folder + &.rootNode:not(.folder), /* Line above records in root */
  &:not(.rootNode).expanded + &:not(.rootNode) > div, /* Within folder: folder or record below expanded folder */
  &:not(.rootNode):not(.folder) + &:not(.rootNode).folder > div, /* Within folder: folder below record */
  &:not(.rootNode):not(.folder).afterExpanded > div { /* Within folder: record (of upper folder) below expanded folder's record */
    border-top: 1px solid $ige-background-bar;
  }

  &:not(.rootNode) + &.rootNode {
    /* Cover bottom border of submenu item above */
    margin-top: -1px;
    padding-top: 10px;
  }

  &:not(.rootNode).expanded + &:not(.rootNode) {
    /* Cover bottom border of parent item above */
    position: relative;
    z-index: 1;
    margin-top: -1px;
    background-color: lighten($ige-background, 10%); /* Other states' background colors have to be set important */
  }

  .label {
    display: flex;
    padding: 5px 0 5px 24px;
    line-height: 20px;
    user-select: none;

    .mat-icon {
      flex-shrink: 0;
      margin: -2px 6px -2px 0;
      font-size: 20px;
      line-height: 0;
    }

    .mat-spinner {
      margin-left: 12px;
      margin-top: 3px;
    }
  }

  &.selected {
    background-color: darken($ige-background, 5%);
  }

  &:hover {
    background-color: darken(#FFFFFF, 5%);
  }

  &.active, &.rootNode.active {
    background-color: $ige-mark-color;

    &:hover {
      background-color: darken($ige-mark-color, 5%);
    }
  }

  &.disabled {
    color: #999;
    font-style: italic;
  }

  &:not(.rootNode) {
    .label {
      display: flex;
      align-items: center;
      padding: 14px 0;
    }
  }

  &:not(.rootNode):not(.folder) {
    .label {
      padding: 8px 0;
    }
  }

  &:not(.rootNode) {
    > div {
      width: calc(100% - 24px);
      margin-left: 24px;
    }
  }

  &:not(.rootNode).folder {
    > div {
      width: calc(100% - 24px);
      margin-left: 24px;
      border-bottom: 1px solid $ige-background-bar;
    }
  }

  .toggle {
    color: $ige-comment-color;
    height: 30px;
    width: 30px;
    margin-right: 15px;
    line-height: 27px;
  }
}

.docType {
  padding-right: 10px;
  padding-left: 15px;
  line-height: 40px;
}

.docType.expandable {
  padding-right: 10px;
  padding-left: 0;
}

.refresh {
  position: absolute;
  right: 0;
  z-index: 1000
}
